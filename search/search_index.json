{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"ChatGPT for Teachers This is a course to help teachers use ChatGPT to generate content for their classrooms. It is designed to be useful for a broad audience and we include an extensive glossary for people that are new to the field of generative text . Outline of Course Part 1: Introduction to ChatGPT? Why use generative AI Legal and ethical issues When to use generative AI vs. finding pre-tested resources Part 2: Key Concepts Prompts and responses Tokens (with a lab) Temperature Markdown Part 3: Creating Great Prompts Making prompts clear Giving context Refining prompts Part 4: Sample Prompts Syllabus Code of Conduct Selecting a License Part 5: Advanced Topics Minimize Costs Fine-tuning Embeddings","title":"Home"},{"location":"#chatgpt-for-teachers","text":"This is a course to help teachers use ChatGPT to generate content for their classrooms. It is designed to be useful for a broad audience and we include an extensive glossary for people that are new to the field of generative text .","title":"ChatGPT for Teachers"},{"location":"#outline-of-course","text":"Part 1: Introduction to ChatGPT? Why use generative AI Legal and ethical issues When to use generative AI vs. finding pre-tested resources Part 2: Key Concepts Prompts and responses Tokens (with a lab) Temperature Markdown Part 3: Creating Great Prompts Making prompts clear Giving context Refining prompts Part 4: Sample Prompts Syllabus Code of Conduct Selecting a License Part 5: Advanced Topics Minimize Costs Fine-tuning Embeddings","title":"Outline of Course"},{"location":"contacts/","text":"Contacts Dan McCreary","title":"Contacts"},{"location":"contacts/#contacts","text":"Dan McCreary","title":"Contacts"},{"location":"getting-started/","text":"Getting Started You can get started in just a few minutes. To use these materials you will need two things: A valid account on either ChatGPT or an account on the OpenAI Playground. Link to ChatGPT A place to put the generated content. We suggest you use GitHub Pages if you would like to share your content with others. To use GitHub Pages you will need a GitHub account. Link to GitHub The way this course runs is that the instructor will show you a suggested prompt and then ask you to try that same prompt on your system. If you are happy with the results, you can then copy and paste the results into your website. Rendering Tools No installation web rendering tools Use these if you have only a web browser orChromebook Trinket.io good for rendering basic Python and turtle graphics JSFiddle.com - good for testing HTML, JavaScript and SVG Desktop Installation Thonny - Basic Python and MicroPython Visual Studio Code - Use for rendering charts and plotting Directory Structure Here is a suggestion structure: 1 2 3 4 5 6 7 8 9 10 11 12 13 HOME docs index.md lessons lesson01.md lesson02.md glossary.md mkdocs.yml license.md code-of-conduct.md README.md src plot-sine.py The structure of your website (navigation, headers, footers) is controller by the settings in your mkdocs.yml file.","title":"Getting Started"},{"location":"getting-started/#getting-started","text":"You can get started in just a few minutes. To use these materials you will need two things: A valid account on either ChatGPT or an account on the OpenAI Playground. Link to ChatGPT A place to put the generated content. We suggest you use GitHub Pages if you would like to share your content with others. To use GitHub Pages you will need a GitHub account. Link to GitHub The way this course runs is that the instructor will show you a suggested prompt and then ask you to try that same prompt on your system. If you are happy with the results, you can then copy and paste the results into your website.","title":"Getting Started"},{"location":"getting-started/#rendering-tools","text":"","title":"Rendering Tools"},{"location":"getting-started/#no-installation-web-rendering-tools","text":"Use these if you have only a web browser orChromebook Trinket.io good for rendering basic Python and turtle graphics JSFiddle.com - good for testing HTML, JavaScript and SVG","title":"No installation web rendering tools"},{"location":"getting-started/#desktop-installation","text":"Thonny - Basic Python and MicroPython Visual Studio Code - Use for rendering charts and plotting","title":"Desktop Installation"},{"location":"getting-started/#directory-structure","text":"Here is a suggestion structure: 1 2 3 4 5 6 7 8 9 10 11 12 13 HOME docs index.md lessons lesson01.md lesson02.md glossary.md mkdocs.yml license.md code-of-conduct.md README.md src plot-sine.py The structure of your website (navigation, headers, footers) is controller by the settings in your mkdocs.yml file.","title":"Directory Structure"},{"location":"glossary/","text":"Glossary of Terms for Course on ChatGPT for Teachers ChatGPT Code Highlighter Deep Links The feature of a website that allows any subsection of a document to have its own URL that can be bookmarked and sent via chat. Fine-Tuning Generative Text GPT Generative Pre-Trained machine learning models. This is the model use for both ChatGPT and GPT-3. Grammarly A cloud-based service that helps writers with spelling, grammar and writing style. Grammarly is also created using large langauge machine learning models. Markdown Mermaid Markdown A text format for encoding diagrams. In January of 2022 GitHub announced built-in support for Mermaid diagrams into their Markdown variant rendered for README.md See Mermaid JS Website Natural Language Processing Also know as: NLP OpenAI A small 400-person company (as of 2022) that created the GPT and ChatGPT large-language models. OpenAI has received over a billion dollars of investment from Microsoft for an exclusivity arrangement that prevents OpenAI from working with the other cloud providers (Google and Amazon) Prompt SVG SVG means Scalable Vector Graphics. It is a standard format for generating vector images (not bitmaps) that can be easily generated by ChatGPT. Tokens Common sequences of characters found in text that are assigned numbers and used as inputs to machine learning models. The number of tokens in both prompts and responses are added together and must be under the token budget for a NLP model.","title":"Glossary"},{"location":"glossary/#glossary-of-terms-for-course-on-chatgpt-for-teachers","text":"","title":"Glossary of Terms for Course on ChatGPT for Teachers"},{"location":"glossary/#chatgpt","text":"","title":"ChatGPT"},{"location":"glossary/#code-highlighter","text":"","title":"Code Highlighter"},{"location":"glossary/#deep-links","text":"The feature of a website that allows any subsection of a document to have its own URL that can be bookmarked and sent via chat.","title":"Deep Links"},{"location":"glossary/#fine-tuning","text":"","title":"Fine-Tuning"},{"location":"glossary/#generative-text","text":"","title":"Generative Text"},{"location":"glossary/#gpt","text":"Generative Pre-Trained machine learning models. This is the model use for both ChatGPT and GPT-3.","title":"GPT"},{"location":"glossary/#grammarly","text":"A cloud-based service that helps writers with spelling, grammar and writing style. Grammarly is also created using large langauge machine learning models.","title":"Grammarly"},{"location":"glossary/#markdown","text":"","title":"Markdown"},{"location":"glossary/#mermaid-markdown","text":"A text format for encoding diagrams. In January of 2022 GitHub announced built-in support for Mermaid diagrams into their Markdown variant rendered for README.md See Mermaid JS Website","title":"Mermaid Markdown"},{"location":"glossary/#natural-language-processing","text":"Also know as: NLP","title":"Natural Language Processing"},{"location":"glossary/#openai","text":"A small 400-person company (as of 2022) that created the GPT and ChatGPT large-language models. OpenAI has received over a billion dollars of investment from Microsoft for an exclusivity arrangement that prevents OpenAI from working with the other cloud providers (Google and Amazon)","title":"OpenAI"},{"location":"glossary/#prompt","text":"","title":"Prompt"},{"location":"glossary/#svg","text":"SVG means Scalable Vector Graphics. It is a standard format for generating vector images (not bitmaps) that can be easily generated by ChatGPT.","title":"SVG"},{"location":"glossary/#tokens","text":"Common sequences of characters found in text that are assigned numbers and used as inputs to machine learning models. The number of tokens in both prompts and responses are added together and must be under the token budget for a NLP model.","title":"Tokens"},{"location":"markdown-summary/","text":"Summary of Markdown Elements Header 1 (Document Title) # Header 1 Header Level 2 ## Header Level 2 Used as the main sections of a document. Header Level 3 ### Header Level 3 Used as the sub-sections of a document. Header Level 4 ### Header Level 3 Used as the sub-sub sections of a document and glossary terms. Bold *bold** Italics *italics* Numbered List One Two Three 1 2 3 1. One 2. Two 3. Three Bullet List Item Item Item 1 2 3 * Item * Item * Item Link 1 [Label](destination) Image 1 ![Alt Text](../img/path) Code Tables","title":"Markdown Summary"},{"location":"markdown-summary/#summary-of-markdown-elements","text":"","title":"Summary of Markdown Elements"},{"location":"markdown-summary/#header-1-document-title","text":"# Header 1","title":"Header 1 (Document Title)"},{"location":"markdown-summary/#header-level-2","text":"## Header Level 2 Used as the main sections of a document.","title":"Header Level 2"},{"location":"markdown-summary/#header-level-3","text":"### Header Level 3 Used as the sub-sections of a document.","title":"Header Level 3"},{"location":"markdown-summary/#header-level-4","text":"### Header Level 3 Used as the sub-sub sections of a document and glossary terms. Bold *bold** Italics *italics* Numbered List One Two Three 1 2 3 1. One 2. Two 3. Three Bullet List Item Item Item 1 2 3 * Item * Item * Item Link 1 [Label](destination) Image 1 ![Alt Text](../img/path) Code Tables","title":"Header Level 4"},{"location":"references/","text":"ChatGPT for Teachers References Grading GPT-3 For STEM Lesson Plan Content Generation Using AI to Generate Detailed Lesson Plans Dan McCreary's Blog GPT Prompt Trends","title":"References"},{"location":"references/#chatgpt-for-teachers-references","text":"Grading GPT-3 For STEM Lesson Plan Content Generation Using AI to Generate Detailed Lesson Plans Dan McCreary's Blog GPT Prompt Trends","title":"ChatGPT for Teachers References"},{"location":"slides/","text":"List of Slide Presentations for ChatGPT for Teachers Single Slide Ten Minute Version Twenty Minute Version One Hour Class One Hour Class Half Day Workshop TBD","title":"Slides"},{"location":"slides/#list-of-slide-presentations-for-chatgpt-for-teachers","text":"","title":"List of Slide Presentations for ChatGPT for Teachers"},{"location":"slides/#single-slide","text":"","title":"Single Slide"},{"location":"slides/#ten-minute-version","text":"","title":"Ten Minute Version"},{"location":"slides/#twenty-minute-version","text":"","title":"Twenty Minute Version"},{"location":"slides/#one-hour-class","text":"One Hour Class","title":"One Hour Class"},{"location":"slides/#half-day-workshop","text":"TBD","title":"Half Day Workshop"},{"location":"tips-and-tricks/","text":"Prompt Guide Provide Context Grade level Tone Vocabulary Give Examples Include in your prompt examples of what you are looking for. If you want a list of things include the first items from a list. 1 2 3 4 5 6 7 Generate a list of topics for a class on Python: 1. Getting started 2. Variables 3. Conditionals 4. Loops 5. Debugging Ask questions To ensure the output is relevant and helpful, ask specific questions within the prompt. This will give the model a better understanding of what you\u2019re looking for. Output Format Most systems don't return results in formats such as MS-Word or MS-Powerpoint. HTML is also hard to read. Try using markdown format. Try Line Art Formats Refine, refine, refine. To get better results, make sure the prompt is specific and concise. Include the questions you want to ask and the context of the conversation, and think about the tone of the conversation as well. Step 6: Use the refined prompt to get better ChatGPT output. Test it out. Use the refined prompt to get a better sense of the output from ChatGPT. Ask the model questions and provide examples of the desired output. The more specific the prompt, the better the results will be. Step 7: Practice making better prompts. Practice makes perfect. Keep practicing and refining your prompts. As you gain more experience with ChatGPT, it will become easier to write better prompts that provide more useful output. With patience and practice, you\u2019ll be a pro at crafting ChatGPT prompts in no time.","title":"Tips and Tricks"},{"location":"tips-and-tricks/#prompt-guide","text":"","title":"Prompt Guide"},{"location":"tips-and-tricks/#provide-context","text":"Grade level Tone Vocabulary","title":"Provide Context"},{"location":"tips-and-tricks/#give-examples","text":"Include in your prompt examples of what you are looking for. If you want a list of things include the first items from a list. 1 2 3 4 5 6 7 Generate a list of topics for a class on Python: 1. Getting started 2. Variables 3. Conditionals 4. Loops 5. Debugging","title":"Give Examples"},{"location":"tips-and-tricks/#ask-questions","text":"To ensure the output is relevant and helpful, ask specific questions within the prompt. This will give the model a better understanding of what you\u2019re looking for.","title":"Ask questions"},{"location":"tips-and-tricks/#output-format","text":"Most systems don't return results in formats such as MS-Word or MS-Powerpoint. HTML is also hard to read. Try using markdown format.","title":"Output Format"},{"location":"tips-and-tricks/#try-line-art-formats","text":"Refine, refine, refine. To get better results, make sure the prompt is specific and concise. Include the questions you want to ask and the context of the conversation, and think about the tone of the conversation as well. Step 6: Use the refined prompt to get better ChatGPT output. Test it out. Use the refined prompt to get a better sense of the output from ChatGPT. Ask the model questions and provide examples of the desired output. The more specific the prompt, the better the results will be. Step 7: Practice making better prompts. Practice makes perfect. Keep practicing and refining your prompts. As you gain more experience with ChatGPT, it will become easier to write better prompts that provide more useful output. With patience and practice, you\u2019ll be a pro at crafting ChatGPT prompts in no time.","title":"Try Line Art Formats"},{"location":"advanced-topics/","text":"Advanced Topics Many of these topics require either complex prompts or Python programming skills. Classification Costs Fine Tuning Embeddings - small numbers that can be placed directly in a prompt","title":"Intro"},{"location":"advanced-topics/#advanced-topics","text":"Many of these topics require either complex prompts or Python programming skills. Classification Costs Fine Tuning Embeddings - small numbers that can be placed directly in a prompt","title":"Advanced Topics"},{"location":"advanced-topics/alternatives/","text":"","title":"Alternatives"},{"location":"advanced-topics/classification/","text":"Classification ChatGPT can be given a list of classifications and then a text item. You can then ask ChatGPT to indicate what classification to give the item. For example, you could have a student feedback form where students fill in a large block of narrative text. You can then create a three-state classification system: Positive Neutral Negative You can then write a program to automatically chart your class sentiment over time. Engine Settings Consistency We want consistent results over time. So we don't want any creativity. Make sure to set Temperature = 0 Difficulty Classification In our CoderDojo classrooms, we have a set of \"Concept Cards\" that are marked as Green, Blue or Black for successive levels of difficulty. We encourage new students to first do the easy green exercises. For each programming exercise, you can classify the lab as beginner, intermediate or advanced. Prompt 1 2 3 Here is a description of a programming task. Classify this task as beginner, intermediate, or adanced. In this lab you will write python code to monitor the voltage on a potentiometer using an ADC pin. The output will be printed to the screen. Response 1 Intermediate Prompt 1 In this lab you will use Python to create a list of colors and then print them out. Response 1 Beginner Feedback Classification Decide whether a Tweet's sentiment is positive, neutral, or negative. Default Classification - works on a single tweet Tweet Feedback Classification Advanced Tweet Classification - works on a large number of tweets in a single file Taxonomy Classification You can give ChatGPT a named taxonomy such as Dewey Decimal system. Prompt What dewey decimal number and classification label would you assign this text: Response The history of computers goes back over 200 years. At first theorized by mathematicians and entrepreneurs, during the 19th century mechanical calculating machines were designed and built to solve the increasingly complex number-crunching challenges. The advancement of technology enabled ever more-complex computers by the early 20th century, and computers became larger and more powerful. 004.093/Technology: History of Computers You can use this","title":"Classification"},{"location":"advanced-topics/classification/#classification","text":"ChatGPT can be given a list of classifications and then a text item. You can then ask ChatGPT to indicate what classification to give the item. For example, you could have a student feedback form where students fill in a large block of narrative text. You can then create a three-state classification system: Positive Neutral Negative You can then write a program to automatically chart your class sentiment over time.","title":"Classification"},{"location":"advanced-topics/classification/#engine-settings","text":"","title":"Engine Settings"},{"location":"advanced-topics/classification/#consistency","text":"We want consistent results over time. So we don't want any creativity. Make sure to set Temperature = 0","title":"Consistency"},{"location":"advanced-topics/classification/#difficulty-classification","text":"In our CoderDojo classrooms, we have a set of \"Concept Cards\" that are marked as Green, Blue or Black for successive levels of difficulty. We encourage new students to first do the easy green exercises. For each programming exercise, you can classify the lab as beginner, intermediate or advanced.","title":"Difficulty Classification"},{"location":"advanced-topics/classification/#prompt","text":"1 2 3 Here is a description of a programming task. Classify this task as beginner, intermediate, or adanced. In this lab you will write python code to monitor the voltage on a potentiometer using an ADC pin. The output will be printed to the screen.","title":"Prompt"},{"location":"advanced-topics/classification/#response","text":"1 Intermediate","title":"Response"},{"location":"advanced-topics/classification/#prompt_1","text":"1 In this lab you will use Python to create a list of colors and then print them out.","title":"Prompt"},{"location":"advanced-topics/classification/#response_1","text":"1 Beginner","title":"Response"},{"location":"advanced-topics/classification/#feedback-classification","text":"Decide whether a Tweet's sentiment is positive, neutral, or negative. Default Classification - works on a single tweet Tweet Feedback Classification Advanced Tweet Classification - works on a large number of tweets in a single file","title":"Feedback Classification"},{"location":"advanced-topics/classification/#taxonomy-classification","text":"You can give ChatGPT a named taxonomy such as Dewey Decimal system.","title":"Taxonomy Classification"},{"location":"advanced-topics/classification/#prompt_2","text":"What dewey decimal number and classification label would you assign this text:","title":"Prompt"},{"location":"advanced-topics/classification/#response_2","text":"The history of computers goes back over 200 years. At first theorized by mathematicians and entrepreneurs, during the 19th century mechanical calculating machines were designed and built to solve the increasingly complex number-crunching challenges. The advancement of technology enabled ever more-complex computers by the early 20th century, and computers became larger and more powerful. 004.093/Technology: History of Computers You can use this","title":"Response"},{"location":"advanced-topics/costs/","text":"","title":"Costs"},{"location":"advanced-topics/embeddings/","text":"Embeddings Embeddings are numerical representations of concepts converted to number sequences. They can be used to find out how similar words, sentences, or paragraphs are to each other. They can also be used to find similar lessons or similar code examples. Embeddings make it easy for computers to understand the relationships between any concepts. They are often used increasing the quality of search results. From the OpenAI announcement: Embeddings make it easy to perform natural language and code tasks like semantic search, clustering, topic modeling, and classification. Our embeddings outperform top models in 3 standard benchmarks, including a 20% relative improvement in code search. Understanding Graph Embeddings https://openai.com/blog/introducing-text-and-code-embeddings/ Question Answering using Embeddings","title":"Embeddings"},{"location":"advanced-topics/embeddings/#embeddings","text":"Embeddings are numerical representations of concepts converted to number sequences. They can be used to find out how similar words, sentences, or paragraphs are to each other. They can also be used to find similar lessons or similar code examples. Embeddings make it easy for computers to understand the relationships between any concepts. They are often used increasing the quality of search results. From the OpenAI announcement: Embeddings make it easy to perform natural language and code tasks like semantic search, clustering, topic modeling, and classification. Our embeddings outperform top models in 3 standard benchmarks, including a 20% relative improvement in code search. Understanding Graph Embeddings https://openai.com/blog/introducing-text-and-code-embeddings/ Question Answering using Embeddings","title":"Embeddings"},{"location":"advanced-topics/fine-tuning/","text":"Fine Tuning Some generative tasks like generating multiple-choice questions require large prompts that can use up your token budgets and increase the cost of generating content. We can lower the costs of these task-specific topics by fine-tuning GPT. This is done by creating a file of prompt-response pairs as examples of what you want the large language model to return. As of February of 2023, fine-tuning can only be done by people that have some experience with Python coding. Many startup companies are working to make this easier and build custom applications that non-programmers can use. OpenAI has extensive documentation on how to call the OpenAI APIs for fine-tuning here: References Fine-tuning a Classifier to Improve Truthfulness OpenAI GPT-3 Fine tuning Guide, with examples","title":"Fine Tuning"},{"location":"advanced-topics/fine-tuning/#fine-tuning","text":"Some generative tasks like generating multiple-choice questions require large prompts that can use up your token budgets and increase the cost of generating content. We can lower the costs of these task-specific topics by fine-tuning GPT. This is done by creating a file of prompt-response pairs as examples of what you want the large language model to return. As of February of 2023, fine-tuning can only be done by people that have some experience with Python coding. Many startup companies are working to make this easier and build custom applications that non-programmers can use. OpenAI has extensive documentation on how to call the OpenAI APIs for fine-tuning here:","title":"Fine Tuning"},{"location":"advanced-topics/fine-tuning/#references","text":"Fine-tuning a Classifier to Improve Truthfulness OpenAI GPT-3 Fine tuning Guide, with examples","title":"References"},{"location":"concepts/","text":"GPT Concepts Prompts Tokens Output Formats","title":"Intro"},{"location":"concepts/#gpt-concepts","text":"Prompts Tokens Output Formats","title":"GPT Concepts"},{"location":"concepts/ethics/","text":"Ethics of Large Language Models and Generative AI Not everyone agrees we should use generative AI tools that are trained on the hard work of others. With any new technology, there are always tradeoffs. Topics for discussion Will being able to quickly generate your own curriculum discourage teachers from working together to share content? Will your generated content use current libraries or will they tend to use older libraries that are being deprecated? Are you violating the spirit of open-source communities if you don't visit their websites for help? How can we guarantee we are using best practices in our code? Can code be too \"dense\" or have too many comments?","title":"Ethics"},{"location":"concepts/ethics/#ethics-of-large-language-models-and-generative-ai","text":"Not everyone agrees we should use generative AI tools that are trained on the hard work of others. With any new technology, there are always tradeoffs.","title":"Ethics of Large Language Models and Generative AI"},{"location":"concepts/ethics/#topics-for-discussion","text":"Will being able to quickly generate your own curriculum discourage teachers from working together to share content? Will your generated content use current libraries or will they tend to use older libraries that are being deprecated? Are you violating the spirit of open-source communities if you don't visit their websites for help? How can we guarantee we are using best practices in our code? Can code be too \"dense\" or have too many comments?","title":"Topics for discussion"},{"location":"concepts/output-formats/","text":"Output Formats Just text today Text types: Markdown Markdown tables HTML SVG Mermaid","title":"Output Formats"},{"location":"concepts/output-formats/#output-formats","text":"Just text today Text types: Markdown Markdown tables HTML SVG Mermaid","title":"Output Formats"},{"location":"concepts/prompts/","text":"","title":"Prompts"},{"location":"concepts/tokens/","text":"Tokens The GPT family of models process text using tokens, which are common sequences of characters found in text. The models understand the statistical relationships between these tokens, and excel at producing the next token in a sequence of tokens. Budget: 4,000 tokens Prompt + Response What are tokens and how to count them? OpenAI GPT Tokenizer","title":"Tokens"},{"location":"concepts/tokens/#tokens","text":"The GPT family of models process text using tokens, which are common sequences of characters found in text. The models understand the statistical relationships between these tokens, and excel at producing the next token in a sequence of tokens. Budget: 4,000 tokens Prompt + Response What are tokens and how to count them? OpenAI GPT Tokenizer","title":"Tokens"},{"location":"prompts/","text":"","title":"Intro"},{"location":"prompts/01-syllabus/","text":"Syllabus Settings model:davinci temperature 0.2 length: 1000 Prompt 1 2 3 4 Create a syllabus for a 10-week course for junior high school students on computational thinking. Provide the first four lessons. For each lesson, include a summary of the topics covered, prerequisites, and learning objectives. Results in markdown format. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 # Computational Thinking Course Syllabus ## Course Description This 10-week course is designed to introduce junior high school students to the fundamentals of computational thinking. Students will learn the basics of problem solving, algorithms, and programming. ## Prerequisites No prior knowledge of programming is required. ## Course Objectives By the end of this course, students will be able to: - Understand the fundamentals of problem solving - Identify and create algorithms - Write basic programs in a programming language ## Lesson 1: Introduction to Problem Solving **Topics Covered:** - Overview of problem solving - Identifying and defining problems - Brainstorming solutions **Prerequisites:** None **Learning Objectives:** - Understand the fundamentals of problem solving - Identify and define a problem - Generate possible solutions to a problem ## Lesson 2: Algorithms **Topics Covered:** - Overview of algorithms - Identifying and defining algorithms - Creating algorithms **Prerequisites:** Introduction to Problem Solving **Learning Objectives:** - Understand the fundamentals of algorithms - Identify and define an algorithm - Create an algorithm to solve a problem ## Lesson 3: Programming Basics **Topics Covered:** - Overview of programming - Identifying and defining programming languages - Writing basic programs **Prerequisites:** Algorithms **Learning Objectives:** - Understand the fundamentals of programming - Identify and define a programming language - Write a basic program to solve a problem ## Lesson 4: Debugging **Topics Covered:** - Overview of debugging - Identifying and fixing errors - Debugging programs **Prerequisites:** Programming Basics **Learning Objectives:** - Understand the fundamentals of debugging - Identify and fix errors in a program - Debug a program to solve a problem","title":"Syllabus"},{"location":"prompts/01-syllabus/#syllabus","text":"","title":"Syllabus"},{"location":"prompts/01-syllabus/#settings","text":"model:davinci temperature 0.2 length: 1000","title":"Settings"},{"location":"prompts/01-syllabus/#prompt","text":"1 2 3 4 Create a syllabus for a 10-week course for junior high school students on computational thinking. Provide the first four lessons. For each lesson, include a summary of the topics covered, prerequisites, and learning objectives. Results in markdown format.","title":"Prompt"},{"location":"prompts/01-syllabus/#response","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 # Computational Thinking Course Syllabus ## Course Description This 10-week course is designed to introduce junior high school students to the fundamentals of computational thinking. Students will learn the basics of problem solving, algorithms, and programming. ## Prerequisites No prior knowledge of programming is required. ## Course Objectives By the end of this course, students will be able to: - Understand the fundamentals of problem solving - Identify and create algorithms - Write basic programs in a programming language ## Lesson 1: Introduction to Problem Solving **Topics Covered:** - Overview of problem solving - Identifying and defining problems - Brainstorming solutions **Prerequisites:** None **Learning Objectives:** - Understand the fundamentals of problem solving - Identify and define a problem - Generate possible solutions to a problem ## Lesson 2: Algorithms **Topics Covered:** - Overview of algorithms - Identifying and defining algorithms - Creating algorithms **Prerequisites:** Introduction to Problem Solving **Learning Objectives:** - Understand the fundamentals of algorithms - Identify and define an algorithm - Create an algorithm to solve a problem ## Lesson 3: Programming Basics **Topics Covered:** - Overview of programming - Identifying and defining programming languages - Writing basic programs **Prerequisites:** Algorithms **Learning Objectives:** - Understand the fundamentals of programming - Identify and define a programming language - Write a basic program to solve a problem ## Lesson 4: Debugging **Topics Covered:** - Overview of debugging - Identifying and fixing errors - Debugging programs **Prerequisites:** Programming Basics **Learning Objectives:** - Understand the fundamentals of debugging - Identify and fix errors in a program - Debug a program to solve a problem","title":"Response"},{"location":"prompts/02-code-of-conduct/","text":"Generating a Code of Conduct ChatGPT can generate a code of conduct for your classroom that can be easily customized. Prompt 1 1 Create a code of conduct for a high school programming class. Result 1 2 3 4 5 6 7 8 9 10 11 12 13 14 Code of Conduct for High School Programming Class 1. Respect: Respect yourself, your classmates, and your teacher. Treat everyone with courtesy and kindness. 2. Attendance: Attendance is mandatory. If you are unable to attend, notify your teacher in advance. 3. Participation: Participate in class discussions and activities. Ask questions and offer help to your classmates. 4. Academic Integrity: All work must be your own. Plagiarism and cheating will not be tolerated. 5. Technology: Use of technology should be limited to class activities. No personal devices should be used during class time. 6. Safety: Follow all safety protocols and procedures. 7. Respect the Environment: Keep the classroom clean and organized. 8. Respect the Equipment: Treat all equipment with care. 9. Respect Deadlines: All assignments must be completed on time. 10. Respect the Rules: Follow all rules and regulations set by the school and teacher. Failure to adhere to this code of conduct may result in disciplinary action. Prompt 2 1 2 Create a code of conduct for a junior high school classroom. Include topics of values, diversity and respect. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 Code of Conduct for Junior High School Classroom Values: 1. Respect yourself, your peers, and your teachers. 2. Bring a positive attitude and be open to learning new things. 3. Be honest and responsible. Diversity: 1. Respect and value the diversity of the classroom. 2. Avoid making any comments or jokes that could be taken as offensive or disrespectful. 3. Treat everyone equally regardless of race, gender, religion, or any other characteristics. Respect: 1. Listen and pay attention when others are speaking. 2. Respect the opinions and viewpoints of others, even if you disagree. 3. Refrain from using any kind of violence or verbal abuse, including bullying or harassment. 4. Follow the teacher\u2019s instructions and rules. 5. Respect the property of the school and others. Failure to adhere to this code of conduct may result in disciplinary action.","title":"Code of Conduct"},{"location":"prompts/02-code-of-conduct/#generating-a-code-of-conduct","text":"ChatGPT can generate a code of conduct for your classroom that can be easily customized.","title":"Generating a Code of Conduct"},{"location":"prompts/02-code-of-conduct/#prompt-1","text":"1 Create a code of conduct for a high school programming class.","title":"Prompt 1"},{"location":"prompts/02-code-of-conduct/#result","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 Code of Conduct for High School Programming Class 1. Respect: Respect yourself, your classmates, and your teacher. Treat everyone with courtesy and kindness. 2. Attendance: Attendance is mandatory. If you are unable to attend, notify your teacher in advance. 3. Participation: Participate in class discussions and activities. Ask questions and offer help to your classmates. 4. Academic Integrity: All work must be your own. Plagiarism and cheating will not be tolerated. 5. Technology: Use of technology should be limited to class activities. No personal devices should be used during class time. 6. Safety: Follow all safety protocols and procedures. 7. Respect the Environment: Keep the classroom clean and organized. 8. Respect the Equipment: Treat all equipment with care. 9. Respect Deadlines: All assignments must be completed on time. 10. Respect the Rules: Follow all rules and regulations set by the school and teacher. Failure to adhere to this code of conduct may result in disciplinary action.","title":"Result"},{"location":"prompts/02-code-of-conduct/#prompt-2","text":"1 2 Create a code of conduct for a junior high school classroom. Include topics of values, diversity and respect. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 Code of Conduct for Junior High School Classroom Values: 1. Respect yourself, your peers, and your teachers. 2. Bring a positive attitude and be open to learning new things. 3. Be honest and responsible. Diversity: 1. Respect and value the diversity of the classroom. 2. Avoid making any comments or jokes that could be taken as offensive or disrespectful. 3. Treat everyone equally regardless of race, gender, religion, or any other characteristics. Respect: 1. Listen and pay attention when others are speaking. 2. Respect the opinions and viewpoints of others, even if you disagree. 3. Refrain from using any kind of violence or verbal abuse, including bullying or harassment. 4. Follow the teacher\u2019s instructions and rules. 5. Respect the property of the school and others. Failure to adhere to this code of conduct may result in disciplinary action.","title":"Prompt 2"},{"location":"prompts/03-license/","text":"Using ChatGPT to Select the Right License There are hundreds of licensing options for you when you put your course information on the web. But which license is right for you> Why should we be concerned about licenses? You may put a lot of work into your course only to have someone else resell it for money. That might not be fair to you. You also want other teachers to use your materials but acknowledge the work you did with attribution. Legal Issues Here are the top three issues. Sharing with other teachers - do you want other teachers to reuse and remix your work? Attribution - do you want others to recognize your work? Non-commercial - is it ok if a commercial publisher takes your work and sells it. Sample Prompt I am a teacher that is creating new lesson plans. I want other teachers to be able to reuse my content and modify it for their classrooms. However, I want them to give me attribution and I don't want anyone to be able to resell my content. What creative commons license should I use? Sample Response The Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0) license would be the best option for you. This license allows others to reuse and modify your content for non-commercial purposes, as long as they give you attribution and share their modified content under the same license. It also prevents anyone from reselling your content. You can then look-up this name and provide a link to it: Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International Adding the License to Each Page In the next session, we will see how you can add this license information to each page in your website.","title":"License"},{"location":"prompts/03-license/#using-chatgpt-to-select-the-right-license","text":"There are hundreds of licensing options for you when you put your course information on the web. But which license is right for you>","title":"Using ChatGPT to Select the Right License"},{"location":"prompts/03-license/#why-should-we-be-concerned-about-licenses","text":"You may put a lot of work into your course only to have someone else resell it for money. That might not be fair to you. You also want other teachers to use your materials but acknowledge the work you did with attribution.","title":"Why should we be concerned about licenses?"},{"location":"prompts/03-license/#legal-issues","text":"Here are the top three issues. Sharing with other teachers - do you want other teachers to reuse and remix your work? Attribution - do you want others to recognize your work? Non-commercial - is it ok if a commercial publisher takes your work and sells it.","title":"Legal Issues"},{"location":"prompts/03-license/#sample-prompt","text":"I am a teacher that is creating new lesson plans. I want other teachers to be able to reuse my content and modify it for their classrooms. However, I want them to give me attribution and I don't want anyone to be able to resell my content. What creative commons license should I use?","title":"Sample Prompt"},{"location":"prompts/03-license/#sample-response","text":"The Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0) license would be the best option for you. This license allows others to reuse and modify your content for non-commercial purposes, as long as they give you attribution and share their modified content under the same license. It also prevents anyone from reselling your content. You can then look-up this name and provide a link to it: Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International","title":"Sample Response"},{"location":"prompts/03-license/#adding-the-license-to-each-page","text":"In the next session, we will see how you can add this license information to each page in your website.","title":"Adding the License to Each Page"},{"location":"prompts/04-license-footer/","text":"Adding a License to the Footer mkdocs material footer Prompt 1 I want to create a web page with a license on the footer of each page. I am using mkdocs. How can I add some HTML to the footer to indicate my license is covered under \"The Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0)\"? Response 1 2 3 4 5 You can add a footer to your web page using the mkdocs-footer-plugin. This plugin allows you to add custom HTML to the footer of your page. To add the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0) license to the footer, you can add the following HTML code to the footer.html file: <div> <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\"><img alt=\"Creative Commons License\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png\" /></a><br />This work is licensed under a <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License</a>. </div>","title":"License Footer"},{"location":"prompts/04-license-footer/#adding-a-license-to-the-footer","text":"mkdocs material footer","title":"Adding a License to the Footer"},{"location":"prompts/04-license-footer/#prompt","text":"1 I want to create a web page with a license on the footer of each page. I am using mkdocs. How can I add some HTML to the footer to indicate my license is covered under \"The Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0)\"?","title":"Prompt"},{"location":"prompts/04-license-footer/#response","text":"1 2 3 4 5 You can add a footer to your web page using the mkdocs-footer-plugin. This plugin allows you to add custom HTML to the footer of your page. To add the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0) license to the footer, you can add the following HTML code to the footer.html file: <div> <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\"><img alt=\"Creative Commons License\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png\" /></a><br />This work is licensed under a <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License</a>. </div>","title":"Response"},{"location":"prompts/05-mkdocs/","text":"Mkdoc Configuration File You want to generate a mkdocs configuration file that includes: Navigation Custom footer with license Prompt 1 I want to create a new microsite using mkdocs and the material theme. Generate a sample mkdocs.yml file that includes a left-side nav bar and pages for home, lessons, a glossary, references and contacts. Add extensions that allows me to create a custom html footer for my license on every page. Add an extension for code highlighting. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 site_name: ChatGPT for Teachers theme: name: 'material' language: en nav: - Home: index.md - Lessons: lessons.md - Glossary: glossary.md - References: references.md - Contacts: contacts.md extra_css: - custom.css extra_javascript: - custom.js markdown_extensions: - footnotes - codehilite footer_html: - <p>Copyright \u00a9 2020 My Microsite. All rights reserved.</p>","title":"Mkdocs Config"},{"location":"prompts/05-mkdocs/#mkdoc-configuration-file","text":"You want to generate a mkdocs configuration file that includes: Navigation Custom footer with license","title":"Mkdoc Configuration File"},{"location":"prompts/05-mkdocs/#prompt","text":"1 I want to create a new microsite using mkdocs and the material theme. Generate a sample mkdocs.yml file that includes a left-side nav bar and pages for home, lessons, a glossary, references and contacts. Add extensions that allows me to create a custom html footer for my license on every page. Add an extension for code highlighting.","title":"Prompt"},{"location":"prompts/05-mkdocs/#response","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 site_name: ChatGPT for Teachers theme: name: 'material' language: en nav: - Home: index.md - Lessons: lessons.md - Glossary: glossary.md - References: references.md - Contacts: contacts.md extra_css: - custom.css extra_javascript: - custom.js markdown_extensions: - footnotes - codehilite footer_html: - <p>Copyright \u00a9 2020 My Microsite. All rights reserved.</p>","title":"Response"},{"location":"prompts/06-lessons/","text":"Generating Lessons Lessons are individual units of learning within a course. In order to generate detailed lesson plans we need to give ChatGPT some context about: The audience (grade level) The subject or topic The background The output format (markdown) Sample Prompt 1 2 3 4 5 6 Create a detailed lesson plan for teaching loops in Python for a junior high-school student about 12 years old. Assume the student has already had a basic introduction to Python and has had lessons on: 1. Syntax 2. Conditionals Generate sample Python code within markdown that will include an input list of colors (red, green blue etc.) and show how to loop through the list of colors to print them each out. Sample Response Below is the sample response. Because the response includes markdown and sample code, we don't make it a simple text object. Lesson Plan: Loops in Python Objectives Understand the concept of loops in Python Learn how to use loops to iterate through a list of items Create a program that uses a loop to print out a list of colors Materials Computer with Python installed Sample code Introduction Welcome to our lesson on loops in Python! In this lesson, we will learn how to use loops to iterate through a list of items. We will also create a program that uses a loop to print out a list of colors. What is a Loop? A loop is a programming construct that allows us to repeat a set of instructions multiple times. This is useful when we want to perform the same task on multiple items. For example, if we have a list of colors, we can use a loop to print out each color in the list. Types of Loops There are two types of loops in Python: for loops and while loops. A for loop is used when we know how many times we want to repeat the instructions. For example, if we have a list of 10 colors, we can use a for loop to print out each color in the list. A while loop is used when we don't know how many times we want to repeat the instructions. For example, if we want to keep asking the user for input until they enter a certain value, we can use a while loop. Sample Code Let's look at some sample code that uses a for loop to print out a list of colors. 1 2 3 4 5 6 7 # Create a list of colors colors = [ \"red\" , \"green\" , \"blue\" ] # Loop through the list of colors for color in colors : # Print out each color print ( color ) The output of this code will be: 1 2 3 red green blue Practice Now it's time to practice writing a program that uses a loop to print out a list of colors. Create a list of colors and use a for loop to print out each color in the list. 1 2 3 4 5 6 7 # Create a list of colors colors = [ \"red\" , \"green\" , \"blue\" , \"yellow\" , \"orange\" , \"purple\" ] # Loop through the list of colors for color in colors : # Print out each color print ( color ) The output of this code will be: 1 2 3 4 5 6 red green blue yellow orange purple Conclusion Congratulations! You have now learned how to use loops to iterate through a list of items. You have also created a program that uses a loop to print out a list of colors.","title":"Lessons"},{"location":"prompts/06-lessons/#generating-lessons","text":"Lessons are individual units of learning within a course. In order to generate detailed lesson plans we need to give ChatGPT some context about: The audience (grade level) The subject or topic The background The output format (markdown)","title":"Generating Lessons"},{"location":"prompts/06-lessons/#sample-prompt","text":"1 2 3 4 5 6 Create a detailed lesson plan for teaching loops in Python for a junior high-school student about 12 years old. Assume the student has already had a basic introduction to Python and has had lessons on: 1. Syntax 2. Conditionals Generate sample Python code within markdown that will include an input list of colors (red, green blue etc.) and show how to loop through the list of colors to print them each out.","title":"Sample Prompt"},{"location":"prompts/06-lessons/#sample-response","text":"Below is the sample response. Because the response includes markdown and sample code, we don't make it a simple text object.","title":"Sample Response"},{"location":"prompts/06-lessons/#lesson-plan-loops-in-python","text":"","title":"Lesson Plan: Loops in Python"},{"location":"prompts/06-lessons/#objectives","text":"Understand the concept of loops in Python Learn how to use loops to iterate through a list of items Create a program that uses a loop to print out a list of colors","title":"Objectives"},{"location":"prompts/06-lessons/#materials","text":"Computer with Python installed Sample code","title":"Materials"},{"location":"prompts/06-lessons/#introduction","text":"Welcome to our lesson on loops in Python! In this lesson, we will learn how to use loops to iterate through a list of items. We will also create a program that uses a loop to print out a list of colors.","title":"Introduction"},{"location":"prompts/06-lessons/#what-is-a-loop","text":"A loop is a programming construct that allows us to repeat a set of instructions multiple times. This is useful when we want to perform the same task on multiple items. For example, if we have a list of colors, we can use a loop to print out each color in the list.","title":"What is a Loop?"},{"location":"prompts/06-lessons/#types-of-loops","text":"There are two types of loops in Python: for loops and while loops. A for loop is used when we know how many times we want to repeat the instructions. For example, if we have a list of 10 colors, we can use a for loop to print out each color in the list. A while loop is used when we don't know how many times we want to repeat the instructions. For example, if we want to keep asking the user for input until they enter a certain value, we can use a while loop.","title":"Types of Loops"},{"location":"prompts/06-lessons/#sample-code","text":"Let's look at some sample code that uses a for loop to print out a list of colors. 1 2 3 4 5 6 7 # Create a list of colors colors = [ \"red\" , \"green\" , \"blue\" ] # Loop through the list of colors for color in colors : # Print out each color print ( color ) The output of this code will be: 1 2 3 red green blue","title":"Sample Code"},{"location":"prompts/06-lessons/#practice","text":"Now it's time to practice writing a program that uses a loop to print out a list of colors. Create a list of colors and use a for loop to print out each color in the list. 1 2 3 4 5 6 7 # Create a list of colors colors = [ \"red\" , \"green\" , \"blue\" , \"yellow\" , \"orange\" , \"purple\" ] # Loop through the list of colors for color in colors : # Print out each color print ( color ) The output of this code will be: 1 2 3 4 5 6 red green blue yellow orange purple","title":"Practice"},{"location":"prompts/06-lessons/#conclusion","text":"Congratulations! You have now learned how to use loops to iterate through a list of items. You have also created a program that uses a loop to print out a list of colors.","title":"Conclusion"},{"location":"prompts/07-glossary/","text":"Glossary of Terms Prompt 1 2 3 4 Create a glossary of terms for an introductory class in Python. For each term, return the markdown format using four hashtags before each term name followed by the definition. #### Term Name Definition Response Variable Definition: A named memory location used to store data Example: x = 5 Function Definition: A block of code that performs a specific task Example: def add_two_numbers(x, y): return x + y Loop Definition: A control flow statement that allows code to be executed repeatedly Example: for i in range(10): print(i) List Definition: An ordered collection of data Example: my_list = [1, 2, 3, 4] Dictionary Definition: A collection of key-value pairs Example: my_dict = {'name': 'John', 'age': 30} String Definition: A sequence of characters Example: my_string = 'Hello World!'","title":"Glossary"},{"location":"prompts/07-glossary/#glossary-of-terms","text":"","title":"Glossary of Terms"},{"location":"prompts/07-glossary/#prompt","text":"1 2 3 4 Create a glossary of terms for an introductory class in Python. For each term, return the markdown format using four hashtags before each term name followed by the definition. #### Term Name Definition","title":"Prompt"},{"location":"prompts/07-glossary/#response","text":"","title":"Response"},{"location":"prompts/07-glossary/#variable","text":"Definition: A named memory location used to store data Example: x = 5","title":"Variable"},{"location":"prompts/07-glossary/#function","text":"Definition: A block of code that performs a specific task Example: def add_two_numbers(x, y): return x + y","title":"Function"},{"location":"prompts/07-glossary/#loop","text":"Definition: A control flow statement that allows code to be executed repeatedly Example: for i in range(10): print(i)","title":"Loop"},{"location":"prompts/07-glossary/#list","text":"Definition: An ordered collection of data Example: my_list = [1, 2, 3, 4]","title":"List"},{"location":"prompts/07-glossary/#dictionary","text":"Definition: A collection of key-value pairs Example: my_dict = {'name': 'John', 'age': 30}","title":"Dictionary"},{"location":"prompts/07-glossary/#string","text":"Definition: A sequence of characters Example: my_string = 'Hello World!'","title":"String"},{"location":"prompts/08-concept-graph/","text":"Concept Graph Teachers frequently have a list of topics that they would like to cover, but they are not expert enough in the topic to know what order to teach the concepts. ChatGPT can help! ChatGPT can return a textual representation of how concepts depend on other concepts. A concept graph is a document that suggests the order that concepts should be taught in a course. The format of the document is usually a dependency structure with each concept being a node on the graph that indicates what other concepts must be mastered before this concept is introduced. Prompt You are an AI that helps teachers figure out what order to teach topics in the classroom. Create an ordered dependency list for the following topics in a Python Course: Introduction Getting Started Variables Conditionals Loops Lists Data Structures Functions Function Parameters Random Numbers Recursion Return the results in Mermaid dependency format like this: graph LR A(Intro) --> B(Getting Started) B --> C(Variables) C --> D(Loops) C --> E(Conditionals) C --> F(Lists) Response To see if ChatGPT understands the idea of concept order we want to get a response that shows that you need to understand functions before you use function parameters or recursion. here is the response: 1 2 3 4 5 6 D --> G(Data Structures) F --> G G --> H(Functions) H --> I(Function Parameters) H --> J(Random Numbers) H --> K(Recursion) Yes indeed! ChatGPT knew that concept H(Functions) needs to be taught before Function Parameters and Recursion. Here is the entire list 1 2 3 4 5 6 7 8 9 10 11 12 graph LR A(Intro) --> B(Getting Started) B --> C(Variables) C --> D(Loops) C --> E(Conditionals) C --> F(Lists) D --> G(Data Structures) F --> G G --> H(Functions) H --> I(Function Parameters) H --> J(Random Numbers) H --> K(Recursion) Concept Graph Link to Mermaid Live","title":"Concept Graph"},{"location":"prompts/08-concept-graph/#concept-graph","text":"Teachers frequently have a list of topics that they would like to cover, but they are not expert enough in the topic to know what order to teach the concepts. ChatGPT can help! ChatGPT can return a textual representation of how concepts depend on other concepts. A concept graph is a document that suggests the order that concepts should be taught in a course. The format of the document is usually a dependency structure with each concept being a node on the graph that indicates what other concepts must be mastered before this concept is introduced.","title":"Concept Graph"},{"location":"prompts/08-concept-graph/#prompt","text":"You are an AI that helps teachers figure out what order to teach topics in the classroom. Create an ordered dependency list for the following topics in a Python Course: Introduction Getting Started Variables Conditionals Loops Lists Data Structures Functions Function Parameters Random Numbers Recursion Return the results in Mermaid dependency format like this: graph LR A(Intro) --> B(Getting Started) B --> C(Variables) C --> D(Loops) C --> E(Conditionals) C --> F(Lists)","title":"Prompt"},{"location":"prompts/08-concept-graph/#response","text":"To see if ChatGPT understands the idea of concept order we want to get a response that shows that you need to understand functions before you use function parameters or recursion. here is the response: 1 2 3 4 5 6 D --> G(Data Structures) F --> G G --> H(Functions) H --> I(Function Parameters) H --> J(Random Numbers) H --> K(Recursion) Yes indeed! ChatGPT knew that concept H(Functions) needs to be taught before Function Parameters and Recursion. Here is the entire list 1 2 3 4 5 6 7 8 9 10 11 12 graph LR A(Intro) --> B(Getting Started) B --> C(Variables) C --> D(Loops) C --> E(Conditionals) C --> F(Lists) D --> G(Data Structures) F --> G G --> H(Functions) H --> I(Function Parameters) H --> J(Random Numbers) H --> K(Recursion)","title":"Response"},{"location":"prompts/08-concept-graph/#concept-graph_1","text":"Link to Mermaid Live","title":"Concept Graph"},{"location":"prompts/09-sample-code/","text":"Generating Sample Code Prompt Create a Python program that prints \"Hello World!\" Response 1 print ( \"Hello World!\" ) Prompt Create a python function that resizes images to all be 512X512","title":"Sample Code"},{"location":"prompts/09-sample-code/#generating-sample-code","text":"","title":"Generating Sample Code"},{"location":"prompts/09-sample-code/#prompt","text":"Create a Python program that prints \"Hello World!\"","title":"Prompt"},{"location":"prompts/09-sample-code/#response","text":"1 print ( \"Hello World!\" )","title":"Response"},{"location":"prompts/09-sample-code/#prompt_1","text":"Create a python function that resizes images to all be 512X512","title":"Prompt"},{"location":"prompts/09a-turtle-graphics/","text":"Turtle Graphics You can use GPT to generate turtle graphics code and then use trinket.io to execute the code. Prompt 1 Use the Python turtle library to draw a square. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 import turtle # Create a turtle object t = turtle . Turtle () # Move the turtle forward by 100 pixels t . forward ( 100 ) # Turn the turtle 90 degrees to the right t . right ( 90 ) # Move the turtle forward by 100 pixels t . forward ( 100 ) # Turn the turtle 90 degrees to the right t . right ( 90 ) # Move the turtle forward by 100 pixels t . forward ( 100 ) # Turn the turtle 90 degrees to the right t . right ( 90 ) # Move the turtle forward by 100 pixels t . forward ( 100 ) # Turn the turtle 90 degrees to the right t . right ( 90 )","title":"Turtle Graphics"},{"location":"prompts/09a-turtle-graphics/#turtle-graphics","text":"You can use GPT to generate turtle graphics code and then use trinket.io to execute the code.","title":"Turtle Graphics"},{"location":"prompts/09a-turtle-graphics/#prompt","text":"1 Use the Python turtle library to draw a square.","title":"Prompt"},{"location":"prompts/09a-turtle-graphics/#response","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 import turtle # Create a turtle object t = turtle . Turtle () # Move the turtle forward by 100 pixels t . forward ( 100 ) # Turn the turtle 90 degrees to the right t . right ( 90 ) # Move the turtle forward by 100 pixels t . forward ( 100 ) # Turn the turtle 90 degrees to the right t . right ( 90 ) # Move the turtle forward by 100 pixels t . forward ( 100 ) # Turn the turtle 90 degrees to the right t . right ( 90 ) # Move the turtle forward by 100 pixels t . forward ( 100 ) # Turn the turtle 90 degrees to the right t . right ( 90 )","title":"Response"},{"location":"prompts/10-html/","text":"","title":"HTML"},{"location":"prompts/11-svg/","text":"Generating SVG prompt Generate the SVG code for a red circle within a blue square. Result 1 2 3 4 <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\"> <rect width=\"100\" height=\"100\" style=\"fill:blue;\" /> <circle cx=\"50\" cy=\"50\" r=\"40\" stroke=\"black\" stroke-width=\"3\" fill=\"red\" /> </svg>","title":"SVG"},{"location":"prompts/11-svg/#generating-svg","text":"","title":"Generating SVG"},{"location":"prompts/11-svg/#prompt","text":"Generate the SVG code for a red circle within a blue square.","title":"prompt"},{"location":"prompts/11-svg/#result","text":"1 2 3 4 <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\"> <rect width=\"100\" height=\"100\" style=\"fill:blue;\" /> <circle cx=\"50\" cy=\"50\" r=\"40\" stroke=\"black\" stroke-width=\"3\" fill=\"red\" /> </svg>","title":"Result"},{"location":"prompts/12-debugging/","text":"Debugging You can give GPT a sample program and ask it to find the bugs or change the output. Prompt 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Find the bug and fix it in this program: # Create a Python program to draw a plot of the function y = 3 * x * x + 4 * x - 5 import matplotlib.pyplot as plt x = range(-10, 11) y = (21,) for i in x: y = [3*i*i + 4*i - 5] plt.plot(x, y) plt.title('y = 3x^2 + 4x - 5') plt.xlabel('x') plt.ylabel('y') plt.show() Response 1 2 3 4 5 6 7 8 9 10 11 12 import matplotlib.pyplot as plt x = range ( - 10 , 11 ) y = [] for i in x : y . append ( 3 * i * i + 4 * i - 5 ) plt . plot ( x , y ) plt . title ( 'y = 3x^2 + 4x - 5' ) plt . xlabel ( 'x' ) plt . ylabel ( 'y' ) plt . show ()","title":"Debugging"},{"location":"prompts/12-debugging/#debugging","text":"You can give GPT a sample program and ask it to find the bugs or change the output.","title":"Debugging"},{"location":"prompts/12-debugging/#prompt","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Find the bug and fix it in this program: # Create a Python program to draw a plot of the function y = 3 * x * x + 4 * x - 5 import matplotlib.pyplot as plt x = range(-10, 11) y = (21,) for i in x: y = [3*i*i + 4*i - 5] plt.plot(x, y) plt.title('y = 3x^2 + 4x - 5') plt.xlabel('x') plt.ylabel('y') plt.show()","title":"Prompt"},{"location":"prompts/12-debugging/#response","text":"1 2 3 4 5 6 7 8 9 10 11 12 import matplotlib.pyplot as plt x = range ( - 10 , 11 ) y = [] for i in x : y . append ( 3 * i * i + 4 * i - 5 ) plt . plot ( x , y ) plt . title ( 'y = 3x^2 + 4x - 5' ) plt . xlabel ( 'x' ) plt . ylabel ( 'y' ) plt . show ()","title":"Response"},{"location":"prompts/13-charts/","text":"Charts You can give GPT a set of points and have it generate the Python code to plot the points. Bar Chart Prompt 1 Create a Python plotly program to draw a vertical bar chart showing the area of all the continents. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 # Data labels = [ 'Africa' , 'Antarctica' , 'Asia' , 'Australia' , 'Europe' , 'North America' , 'South America' ] values = [ 30.37 , 14.2 , 44.6 , 8.5 , 10.2 , 24.2 , 17.8 ] # Create figure fig = go . Figure ( data = [ go . Bar ( x = labels , y = values , text = values , textposition = 'auto' , marker_color = '#FFA500' )]) # Change the bar mode fig . update_layout ( barmode = 'stack' ) # Add title fig . update_layout ( title_text = 'Area of Continents' ) # Show figure fig . show () Note the area is millions of square kilometers. Prompt 1 Create a Python program to draw a sine wave using Plotly. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 import plotly.graph_objects as go import numpy as np # Generate data x = np . linspace ( 0 , 10 , 1000 ) y = np . sin ( x ) # Create figure fig = go . Figure () # Add trace fig . add_trace ( go . Scatter ( x = x , y = y , mode = 'lines' , name = 'sin(x)' )) # Set title fig . update_layout ( title_text = 'Sine Wave' ) # Show figure fig . show () Plot a Polynomual Prompt 1 Create a Python program to draw a plot of the function y =2x^2 - 20x + 50 from x=0 to 13 using plotly Response 1 2 3 4 5 6 7 8 9 10 11 12 import plotly.graph_objects as go x = list ( range ( 0 , 13 )) y = [] for i in x : y . append ( 2 * i * i - 20 * i + 50 ) print ( y ) fig = go . Figure () fig . add_trace ( go . Scatter ( x = x , y = y , mode = 'lines+markers' )) fig . update_layout ( title = 'y = 2x^2 - 20x + 50' , xaxis_title = 'x' , yaxis_title = 'y' ) fig . show () Bar Chart Create a Python plotly program to draw a vertical bar chart showing the area of all the contanents ```py import plotly.graph_objects as go Data labels = ['Africa', 'Antarctica', 'Asia', 'Australia', 'Europe', 'North America', 'South America'] values = [30.37, 14.2, 44.6, 8.5, 10.2, 24.2, 17.8] Create figure fig = go.Figure(data=[go.Bar( x=labels, y=values, text=values, textposition='auto', marker_color='#FFA500' )]) Change the bar mode fig.update_layout(barmode='stack') Add title fig.update_layout(title_text='Area of Continents') Show figure fig.show()","title":"Charts and Plotting"},{"location":"prompts/13-charts/#charts","text":"You can give GPT a set of points and have it generate the Python code to plot the points.","title":"Charts"},{"location":"prompts/13-charts/#bar-chart","text":"","title":"Bar Chart"},{"location":"prompts/13-charts/#prompt","text":"1 Create a Python plotly program to draw a vertical bar chart showing the area of all the continents.","title":"Prompt"},{"location":"prompts/13-charts/#response","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 # Data labels = [ 'Africa' , 'Antarctica' , 'Asia' , 'Australia' , 'Europe' , 'North America' , 'South America' ] values = [ 30.37 , 14.2 , 44.6 , 8.5 , 10.2 , 24.2 , 17.8 ] # Create figure fig = go . Figure ( data = [ go . Bar ( x = labels , y = values , text = values , textposition = 'auto' , marker_color = '#FFA500' )]) # Change the bar mode fig . update_layout ( barmode = 'stack' ) # Add title fig . update_layout ( title_text = 'Area of Continents' ) # Show figure fig . show () Note the area is millions of square kilometers.","title":"Response"},{"location":"prompts/13-charts/#prompt_1","text":"1 Create a Python program to draw a sine wave using Plotly.","title":"Prompt"},{"location":"prompts/13-charts/#response_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 import plotly.graph_objects as go import numpy as np # Generate data x = np . linspace ( 0 , 10 , 1000 ) y = np . sin ( x ) # Create figure fig = go . Figure () # Add trace fig . add_trace ( go . Scatter ( x = x , y = y , mode = 'lines' , name = 'sin(x)' )) # Set title fig . update_layout ( title_text = 'Sine Wave' ) # Show figure fig . show ()","title":"Response"},{"location":"prompts/13-charts/#plot-a-polynomual","text":"","title":"Plot a Polynomual"},{"location":"prompts/13-charts/#prompt_2","text":"1 Create a Python program to draw a plot of the function y =2x^2 - 20x + 50 from x=0 to 13 using plotly","title":"Prompt"},{"location":"prompts/13-charts/#response_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 import plotly.graph_objects as go x = list ( range ( 0 , 13 )) y = [] for i in x : y . append ( 2 * i * i - 20 * i + 50 ) print ( y ) fig = go . Figure () fig . add_trace ( go . Scatter ( x = x , y = y , mode = 'lines+markers' )) fig . update_layout ( title = 'y = 2x^2 - 20x + 50' , xaxis_title = 'x' , yaxis_title = 'y' ) fig . show ()","title":"Response"},{"location":"prompts/13-charts/#bar-chart_1","text":"Create a Python plotly program to draw a vertical bar chart showing the area of all the contanents ```py import plotly.graph_objects as go","title":"Bar Chart"},{"location":"prompts/13-charts/#data","text":"labels = ['Africa', 'Antarctica', 'Asia', 'Australia', 'Europe', 'North America', 'South America'] values = [30.37, 14.2, 44.6, 8.5, 10.2, 24.2, 17.8]","title":"Data"},{"location":"prompts/13-charts/#create-figure","text":"fig = go.Figure(data=[go.Bar( x=labels, y=values, text=values, textposition='auto', marker_color='#FFA500' )])","title":"Create figure"},{"location":"prompts/13-charts/#change-the-bar-mode","text":"fig.update_layout(barmode='stack')","title":"Change the bar mode"},{"location":"prompts/13-charts/#add-title","text":"fig.update_layout(title_text='Area of Continents')","title":"Add title"},{"location":"prompts/13-charts/#show-figure","text":"fig.show()","title":"Show figure"},{"location":"prompts/14-tables/","text":"Table Summarization If you have some narrative text with facts in that text, you can use ChatGPT to create a table out of facts in the narrative text. Note that the first line of the Markdown table format is included in the prompt. Sample Prompt 1 2 3 4 5 6 7 8 9 10 11 12 Create a markdown table summarizing the fruits from Goocrux: There are many fruits that were found on the recently discovered planet Goocrux. There are neoskizzles that grow there, which are purple and taste like candy. There are also loheckles, which are a grayish blue fruit and are very tart, a little bit like a lemon. Pounits are a bright green color and are more savory than sweet. There are also plenty of loopnovas which are a neon pink flavor and taste like cotton candy. Finally, there are fruits called glowls, which have a very sour and bitter taste which is acidic and caustic, and a pale orange tinge to them. | Fruit | Color | Flavor | Sample response 1 2 3 4 5 | Neoskizzles | Purple | Candy | | Loheckles | Grayish Blue | Tart, like a lemon | | Pounits | Bright Green | Savory | | Loopnovas | Neon Pink | Cotton Candy | | Glowls | Pale Orange | Sour and Bitter, Acidic and Caustic | Here is that sample format rendered in HTML tables using the mkdocs converter: Fruit Color Flavor Neoskizzles Purple Candy Loheckles Grayish Blue Tart, like a lemon Pounits Bright Green Savory Loopnovas Neon Pink Cotton Candy Glowls Pale Orange Sour and Bitter, Acidic and Caustic","title":"Tables"},{"location":"prompts/14-tables/#table-summarization","text":"If you have some narrative text with facts in that text, you can use ChatGPT to create a table out of facts in the narrative text. Note that the first line of the Markdown table format is included in the prompt.","title":"Table Summarization"},{"location":"prompts/14-tables/#sample-prompt","text":"1 2 3 4 5 6 7 8 9 10 11 12 Create a markdown table summarizing the fruits from Goocrux: There are many fruits that were found on the recently discovered planet Goocrux. There are neoskizzles that grow there, which are purple and taste like candy. There are also loheckles, which are a grayish blue fruit and are very tart, a little bit like a lemon. Pounits are a bright green color and are more savory than sweet. There are also plenty of loopnovas which are a neon pink flavor and taste like cotton candy. Finally, there are fruits called glowls, which have a very sour and bitter taste which is acidic and caustic, and a pale orange tinge to them. | Fruit | Color | Flavor |","title":"Sample Prompt"},{"location":"prompts/14-tables/#sample-response","text":"1 2 3 4 5 | Neoskizzles | Purple | Candy | | Loheckles | Grayish Blue | Tart, like a lemon | | Pounits | Bright Green | Savory | | Loopnovas | Neon Pink | Cotton Candy | | Glowls | Pale Orange | Sour and Bitter, Acidic and Caustic | Here is that sample format rendered in HTML tables using the mkdocs converter: Fruit Color Flavor Neoskizzles Purple Candy Loheckles Grayish Blue Tart, like a lemon Pounits Bright Green Savory Loopnovas Neon Pink Cotton Candy Glowls Pale Orange Sour and Bitter, Acidic and Caustic","title":"Sample response"},{"location":"prompts/15-micropython/","text":"MicroPython Prompt create a micropython program to blink an LED every half second. Response ```python import time from machine import Pin led = Pin(2, Pin.OUT) while True: led.value(not led.value()) time.sleep(0.5) ````","title":"MicroPython"},{"location":"prompts/15-micropython/#micropython","text":"","title":"MicroPython"},{"location":"prompts/15-micropython/#prompt","text":"create a micropython program to blink an LED every half second.","title":"Prompt"},{"location":"prompts/15-micropython/#response","text":"```python import time from machine import Pin led = Pin(2, Pin.OUT) while True: led.value(not led.value()) time.sleep(0.5) ````","title":"Response"},{"location":"prompts/16-quiz/","text":"Generating Quiz Open Answer Prompt Response True/False Multiple Choice","title":"Generating Quiz"},{"location":"prompts/16-quiz/#generating-quiz","text":"","title":"Generating Quiz"},{"location":"prompts/16-quiz/#open-answer","text":"","title":"Open Answer"},{"location":"prompts/16-quiz/#prompt","text":"","title":"Prompt"},{"location":"prompts/16-quiz/#response","text":"","title":"Response"},{"location":"prompts/16-quiz/#truefalse","text":"","title":"True/False"},{"location":"prompts/16-quiz/#multiple-choice","text":"","title":"Multiple Choice"},{"location":"prompts/17-explaining-code/","text":"Explaining Code. We can also give ChatGPT a block of code and have it create an explanation of that code for a given grade level. Prompt 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 Explain this Python program to a 12-year old student: Explain the following Python program to a 12-year old student: import turtle colorList = ['red', 'orange', 'green', 'blue', 'indigo', 'violet', 'brown'] def draw_branch(turtle, color, size, level): if level > 1: turtle.pendown() turtle.color(color) turtle.forward(size) turtle.right(20) # draw three branches at half length with a branch on the tip of each branch for i in range(0, 3): turtle.forward(size/2) draw_branch(turtle, colorList[i], size/2, level - 1) turtle.backward(size/2) turtle.left(20) turtle.right(40) turtle.backward(size) myTurtle = turtle.Turtle() myTurtle.shape(\"turtle\") myTurtle.speed(50) length = 150 numberPetals = 6 myTurtle.penup() # move to the bottom center myTurtle.goto(0, -200) myTurtle.left(90) draw_branch(myTurtle, colorList[0], length, 4) Response This Python program uses the turtle library to draw a branching pattern with different colors. The draw_branch function takes four parameters: a turtle object, a color, a size, and a level. The turtle object is used to draw the pattern, the color is the color of the branch, the size is the length of the branch, and the level is how many levels of branches there are. The function will draw a branch and then draw three branches at half length with a branch at the tip of each branch. The turtle will then move back to the start and turn to the next branch. Finally, the turtle will move to the bottom center of the page and draw the branching pattern with four levels using the color red.","title":"Explaining Code"},{"location":"prompts/17-explaining-code/#explaining-code","text":"We can also give ChatGPT a block of code and have it create an explanation of that code for a given grade level.","title":"Explaining Code."},{"location":"prompts/17-explaining-code/#prompt","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 Explain this Python program to a 12-year old student: Explain the following Python program to a 12-year old student: import turtle colorList = ['red', 'orange', 'green', 'blue', 'indigo', 'violet', 'brown'] def draw_branch(turtle, color, size, level): if level > 1: turtle.pendown() turtle.color(color) turtle.forward(size) turtle.right(20) # draw three branches at half length with a branch on the tip of each branch for i in range(0, 3): turtle.forward(size/2) draw_branch(turtle, colorList[i], size/2, level - 1) turtle.backward(size/2) turtle.left(20) turtle.right(40) turtle.backward(size) myTurtle = turtle.Turtle() myTurtle.shape(\"turtle\") myTurtle.speed(50) length = 150 numberPetals = 6 myTurtle.penup() # move to the bottom center myTurtle.goto(0, -200) myTurtle.left(90) draw_branch(myTurtle, colorList[0], length, 4)","title":"Prompt"},{"location":"prompts/17-explaining-code/#response","text":"This Python program uses the turtle library to draw a branching pattern with different colors. The draw_branch function takes four parameters: a turtle object, a color, a size, and a level. The turtle object is used to draw the pattern, the color is the color of the branch, the size is the length of the branch, and the level is how many levels of branches there are. The function will draw a branch and then draw three branches at half length with a branch at the tip of each branch. The turtle will then move back to the start and turn to the next branch. Finally, the turtle will move to the bottom center of the page and draw the branching pattern with four levels using the color red.","title":"Response"},{"location":"prompts/18-designing-robots/","text":"Designing Robots Not everyone is good at designing fun but low-cost robots. But you have nothing to fear! ChatGPT is here! Here is a sample prompt and response and some analysis of the response from some subject-matter experts. Sample Prompt 1 Design a low-cost robot to teach STEM (science, technology, engineering, and math) concepts. Use low-cost parts so all students could program their own robots with MicroPython. Response 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 The robot design should include: 1. An affordable chassis made from lightweight material such as plastic or cardboard. 2. A motor controller that can be programmed with micropython to control the robot\u2019s movements. 3. Two DC motors with encoders that provide feedback on the robot\u2019s speed and direction. 4. Sensors such as an infrared distance sensor, light sensor, and touch sensor for the robot to interact with its environment. 5. An onboard battery to power the robot. 6. A USB port to connect the robot to a laptop or other device for programming with micropython. 7. A low-cost microcontroller with enough memory to run micropython code. 8. A set of instructions and sample programs to get students started with programming their robot. We agree with everything but a small detail of #3. We find that DC motors only cost about $1.50 each. But motors with encoders usually run around $15. This doubles the cost of the kits and we have also found that the algorithms to control the robots from the encoder data is too complex for most students to understand. Other than this minor point, we agree with all the items on this list. Examples of robots with these designs are listed below: Raspberry Pi Pico Robot Medium Blog on the Raspberry Pi Pico Robot Cytron Robot","title":"Designing Robots"},{"location":"prompts/18-designing-robots/#designing-robots","text":"Not everyone is good at designing fun but low-cost robots. But you have nothing to fear! ChatGPT is here! Here is a sample prompt and response and some analysis of the response from some subject-matter experts.","title":"Designing Robots"},{"location":"prompts/18-designing-robots/#sample-prompt","text":"1 Design a low-cost robot to teach STEM (science, technology, engineering, and math) concepts. Use low-cost parts so all students could program their own robots with MicroPython.","title":"Sample Prompt"},{"location":"prompts/18-designing-robots/#response","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 The robot design should include: 1. An affordable chassis made from lightweight material such as plastic or cardboard. 2. A motor controller that can be programmed with micropython to control the robot\u2019s movements. 3. Two DC motors with encoders that provide feedback on the robot\u2019s speed and direction. 4. Sensors such as an infrared distance sensor, light sensor, and touch sensor for the robot to interact with its environment. 5. An onboard battery to power the robot. 6. A USB port to connect the robot to a laptop or other device for programming with micropython. 7. A low-cost microcontroller with enough memory to run micropython code. 8. A set of instructions and sample programs to get students started with programming their robot. We agree with everything but a small detail of #3. We find that DC motors only cost about $1.50 each. But motors with encoders usually run around $15. This doubles the cost of the kits and we have also found that the algorithms to control the robots from the encoder data is too complex for most students to understand. Other than this minor point, we agree with all the items on this list. Examples of robots with these designs are listed below: Raspberry Pi Pico Robot Medium Blog on the Raspberry Pi Pico Robot Cytron Robot","title":"Response"},{"location":"prompts/19-comparing-microcontrollers/","text":"Comparing Microcontrollers Prompt Create a markdown table that lists the Name, Cost, RAM Memory Size, Flash Memory Size for the following microcontrollers: Arduino Uno Arduino Nano Arduino Mega Raspberry Pi Pico ESP32 Response Name Cost RAM Memory Size Flash Memory Size Arduino Uno $20 2 KB 32 KB Arduino Nano $10 2 KB 32 KB Arduino Mega $45 8 KB 256 KB Raspberry Pi Pico $4 264 KB 2 MB ESP32 $10 520 KB 16 MB","title":"Comparing Microcontrollers"},{"location":"prompts/19-comparing-microcontrollers/#comparing-microcontrollers","text":"","title":"Comparing Microcontrollers"},{"location":"prompts/19-comparing-microcontrollers/#prompt","text":"Create a markdown table that lists the Name, Cost, RAM Memory Size, Flash Memory Size for the following microcontrollers: Arduino Uno Arduino Nano Arduino Mega Raspberry Pi Pico ESP32","title":"Prompt"},{"location":"prompts/19-comparing-microcontrollers/#response","text":"Name Cost RAM Memory Size Flash Memory Size Arduino Uno $20 2 KB 32 KB Arduino Nano $10 2 KB 32 KB Arduino Mega $45 8 KB 256 KB Raspberry Pi Pico $4 264 KB 2 MB ESP32 $10 520 KB 16 MB","title":"Response"},{"location":"prompts/20-website-analytics/","text":"Website Analytics Prompt 1 How do I track how many people are going to my website? Response 1 2 3 4 5 1. Use Google Analytics to track your website visitors. Google Analytics is a free web analytics service that allows you to measure your website\u2019s traffic, visitor behavior and other important data. 2. Use a web server log files to track website visitors. Web server log files provide detailed information about how many people are visiting your website, where they came from, and how they interacted with your website. 3. Use a third-party website traffic monitoring service. There are many third-party services that offer website traffic monitoring, including Alexa, Compete and Quantcast. These services provide detailed information about the number of visitors to your website, where they came from, and how they interacted with your website. Prompt 1 How do use Use Google Analytics? Response 1 2 3 4 5 6 7 8 9 10 11 12 13 1. Create an Account: Sign up for a free Google Analytics account and connect your website to Google Analytics. 2. Install the Tracking Code: Install the Google Analytics tracking code on your website. 3. Set Goals: Set Goals in Google Analytics to measure and track the performance of your website. 4. Monitor Performance: Monitor the performance of your website by using the reporting features available in Google Analytics, including the real-time reports. 5. Track User Interactions: Track user interactions with your website by creating Events and setting up Site Search. 6. Analyze Your Data: Analyze your data by using the Advanced Segments feature in Google Analytics and create custom reports. 7. Optimize Your Site: Optimize your website by using the insights provided by Google Analytics and take corrective action if needed. Prompt 1 How do I install a Google Analytics Tracking Code on my website? Sign in to your Google Analytics account and select the website you want to track. Click on the Admin tab in the top navigation. Select the account and property which you want to track. Click on \u201cTracking Info\u201d and then \u201cTracking Code\u201d. Copy the tracking code from the box in the pop-up window. Paste the tracking code into the source code of your website. It should be placed immediately after the opening tag. Save your changes and test the tracking code on your website. Refresh the page and check to make sure the tracking code is working correctly. Actual process mkdocs material site analytics Open your mkdocs.yml and add the following lines 1 2 3 4 extra: analytics: provider: google property: G-HPYNX9B8QZ Note To use this feature, you must be on mkdocs-material 7.1.8 or later. 1 2 pip3 install --upgrade mkdocs-material Successfully installed mkdocs-material-8.2.11 mkdocs-material-extensions-1.0.3 pygments-2.11.2 pymdown-extensions-9.1 Verify Google Analytics Use the Google Chrome More Tools -> Developer Tools -> Elements menus. Then click on the arrow to open the head element. There you should see the Google Analytics scripts:","title":"Website Analytics"},{"location":"prompts/20-website-analytics/#website-analytics","text":"","title":"Website Analytics"},{"location":"prompts/20-website-analytics/#prompt","text":"1 How do I track how many people are going to my website?","title":"Prompt"},{"location":"prompts/20-website-analytics/#response","text":"1 2 3 4 5 1. Use Google Analytics to track your website visitors. Google Analytics is a free web analytics service that allows you to measure your website\u2019s traffic, visitor behavior and other important data. 2. Use a web server log files to track website visitors. Web server log files provide detailed information about how many people are visiting your website, where they came from, and how they interacted with your website. 3. Use a third-party website traffic monitoring service. There are many third-party services that offer website traffic monitoring, including Alexa, Compete and Quantcast. These services provide detailed information about the number of visitors to your website, where they came from, and how they interacted with your website.","title":"Response"},{"location":"prompts/20-website-analytics/#prompt_1","text":"1 How do use Use Google Analytics?","title":"Prompt"},{"location":"prompts/20-website-analytics/#response_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 1. Create an Account: Sign up for a free Google Analytics account and connect your website to Google Analytics. 2. Install the Tracking Code: Install the Google Analytics tracking code on your website. 3. Set Goals: Set Goals in Google Analytics to measure and track the performance of your website. 4. Monitor Performance: Monitor the performance of your website by using the reporting features available in Google Analytics, including the real-time reports. 5. Track User Interactions: Track user interactions with your website by creating Events and setting up Site Search. 6. Analyze Your Data: Analyze your data by using the Advanced Segments feature in Google Analytics and create custom reports. 7. Optimize Your Site: Optimize your website by using the insights provided by Google Analytics and take corrective action if needed.","title":"Response"},{"location":"prompts/20-website-analytics/#prompt_2","text":"1 How do I install a Google Analytics Tracking Code on my website? Sign in to your Google Analytics account and select the website you want to track. Click on the Admin tab in the top navigation. Select the account and property which you want to track. Click on \u201cTracking Info\u201d and then \u201cTracking Code\u201d. Copy the tracking code from the box in the pop-up window. Paste the tracking code into the source code of your website. It should be placed immediately after the opening tag. Save your changes and test the tracking code on your website. Refresh the page and check to make sure the tracking code is working correctly.","title":"Prompt"},{"location":"prompts/20-website-analytics/#actual-process","text":"mkdocs material site analytics Open your mkdocs.yml and add the following lines 1 2 3 4 extra: analytics: provider: google property: G-HPYNX9B8QZ Note To use this feature, you must be on mkdocs-material 7.1.8 or later. 1 2 pip3 install --upgrade mkdocs-material Successfully installed mkdocs-material-8.2.11 mkdocs-material-extensions-1.0.3 pygments-2.11.2 pymdown-extensions-9.1","title":"Actual process"},{"location":"prompts/20-website-analytics/#verify-google-analytics","text":"Use the Google Chrome More Tools -> Developer Tools -> Elements menus. Then click on the arrow to open the head element. There you should see the Google Analytics scripts:","title":"Verify Google Analytics"}]}